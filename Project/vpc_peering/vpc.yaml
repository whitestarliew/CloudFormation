#Parameters:
  # InstanceType:
  #   Description: just a template for the instance, nothing more than that.
  #   Type: String
  #   Default: t3.micro
  #   ConstraintDescription: Kindly use a valid instance type.

Mappings:
  AZforMapping:
    eu-west-2:
      AvailabilityZone: eu-west-2a
    ap-east-1:
      AvailabilityZone: ap-east-1a
    ap-southeast-1:
      AvailabilityZone: ap-southeast-1a
    ap-southeast-2:
      AvailabilityZone: ap-southeast-2a

  
  

Resources:
  VPCCF:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 192.168.12.0/24
      EnableDnsHostnames: True
      EnableDnsSupport: True
      Tags:
        -
          Key: "Name"
          Value: "VPC With CloudFormation"

#Internet Gateway 
  IGWforCloudFormation:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - 
          Key: "Name"
          Value: "CloudFormation on Internet Gateway"

  IGWAttachtoVPC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPCCF
      InternetGatewayId: !Ref IGWforCloudFormation


  #Routing means that where did the route table goes to 



      

  #Subnet
  publicsubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCCF
      AvailabilityZone: !FindInMap [AZforMapping, !Ref 'AWS::Region',AvailabilityZone]
      CidrBlock: 192.168.12.1/27
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: public subnet on CloudFormation
  PublicFacingRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCCF
      Tags:
        - 
          Key: "Name"
          Value: "Public Route Table CloudFormation"   

  RouteTableAssociate1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicFacingRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGWforCloudFormation

  publicsubnetroutetableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicsubnet1
      RouteTableId: !Ref PublicFacingRouteTable

  #Private Subnet 
  privatesubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPCCF
      AvailabilityZone: !FindInMap [AZforMapping, !Ref 'AWS::Region',AvailabilityZone]
      CidrBlock: 192.168.12.65/27
      MapPublicIpOnLaunch: False
      Tags:
        - Key: Name
          Value: private subnet on CloudFormation
  
  PrivateFacingRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPCCF
      Tags:
        - 
          Key: "Name"
          Value: "Private Route Table CloudFormation"

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privatesubnet1
      RouteTableId: !Ref PrivateFacingRouteTable

  # RouteTableAssociate2:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateFacingRouteTable
  #     DestinationCidrBlock: 192.168.12.65/27
  #     VpcEndpointId: !Ref VPCCF
  


#Route Table attachment           
  RTAttachtosubnet1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicFacingRouteTable
      SubnetId: !Ref publicsubnet1

  # RTAttachtosubnet2:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     RouteTableId: !Ref PrivateFacingRouteTable
  #     SubnetId: !Ref privatesubnet1
  
  # test

Outputs: 
  VPCtest:
    Description: Output for VPC
    Value: !Ref VPCCF
    Export:
      Name: VPC1